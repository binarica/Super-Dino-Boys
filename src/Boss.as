package{	import engine.Locator;		import flash.display.MovieClip;	import flash.utils.clearInterval;	import flash.utils.setInterval;		public class Boss extends Character	{			public var model:MovieClip;				public var health:int = C.BOSS_LIFE;		public var isShooting:Boolean = false;		public var shootingAnimation:Boolean = false;						private var timerShoot:uint;		private var timerDamage:uint;				public function Boss()		{			model = new MovieClip();			model = Locator.assetManager.getMovieClip("Alien");		}				override public function spawn(x:int, y:int):void		{			Locator.mainStage.addChild(model);			model.x = x;			model.y = y;			model.scaleX = model.scaleY = C.GAME_SCALE;		}				public function update(xHero:Number):void		{			animationControl();			move(xHero);			view(xHero);		}		private function move(xHero:Number):void		{			if (left && !isShooting)			{				if (model.x <= 130)				{					model.x = 130;				}				else if (model.scaleX == -3 && model.x <= xHero + C.ENEMY_DISTANCE)				{					model.x = xHero + C.ENEMY_DISTANCE;				}				else				{					model.x -= C.BOSS_SPEED;					}			}			else if (right && !isShooting)			{				if (model.x >= Locator.mainStage.stageWidth - 130)				{					model.x = Locator.mainStage.stageWidth - 130;				}				else if (model.scaleX == 3 && model.x >= xHero -C.ENEMY_DISTANCE)				{					model.x = xHero - C.ENEMY_DISTANCE;				}				else				{					model.x += C.BOSS_SPEED;					}			}		}				private function animationControl():void		{			if ((left || right) && !isShooting && !shootingAnimation)			{				model.gotoAndPlay("idle");			}			if (isShooting && !shootingAnimation)			{				model.gotoAndPlay("shoot");				shootingAnimation = true;								timerShoot = setInterval(stopShooting, C.PUNCH_DELAY); // hacerlo con unlock...			}			if (damage && !damageAnimation)			{				model.gotoAndPlay("damage");								damageAnimation = true;				timerDamage = setInterval(stopDamage, 250);			}		}				private function stopShooting():void		{			isShooting = false;			shootingAnimation = false;			clearInterval(timerShoot);		}		private function stopDamage():void		{			damage = false;			damageAnimation = false;			clearInterval(timerDamage);		}				public function view(x:int):void		{			if (model.x > x - 20 && model.scaleX != -C.GAME_SCALE)			{				model.scaleX = -C.GAME_SCALE;				model.x += model.width/2;			}			else if (model.x <= x && model.scaleX != C.GAME_SCALE)			{				model.scaleX = C.GAME_SCALE;				model.x -= model.width/2;			}		}				public function destroy():void		{			if(model.parent != null)			{				Locator.mainStage.removeChild(model);								left = false;				right = false;								isShooting = false;				shootingAnimation = false;				damage = false;				damageAnimation = false;				health = C.BOSS_LIFE;			}		}	}}